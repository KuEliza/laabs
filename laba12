"""
Вариант 7:
Вычислить сумму знакопеременного ряда |х^(3n-1)|/(3n-1)!, где х-матрица ранга к (к и матрица задаются случайным образом),
n - номер слагаемого. Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой.
У алгоритма д.б. линейная сложность. Операция умножения –поэлементная. Знак первого слагаемого  -случайный.
"""

import numpy as np
from decimal import Decimal, getcontext
from random import choice, randint


# Сумма знакопеременного ряда
def summa(x, t):
    n = 1
    resul = 0
    factor = 2
    sign = choice([-1, 1])
    matrix = x * x * x


    # Цикл для вычисления ряда
    while True:
        term = Decimal(np.linalg.det(matrix) / factor)  # Текущий член ряда
        resul += sign * term
        if abs(term) < 1 / (10 ** t):        # Проверяем, достигли ли заданной точности t
            break
        n += 1                              # Параметры для следующего
        sign = -sign
        factor *= (3*n)*(3*n+1)*(3*n+2)
        matrix *= x * x

    return resul


try:
    t = int(input('Введите число t, являющееся кол-вом знаков после запятой, оно должно быть больше или равно 1 и меньше 290: '))
    while t < 1 and t > 290:
        t = int(input('Введите число t, большее или равное 1 и меньше 300:\n'))

    k = randint(2, 7)
    x = np.round(np.random.uniform(-1, 1, (k, k)), 3) #создание матрицы
    print('\nСлучайно сгенерированная матрица:\n', x)

    getcontext().prec = t           # Установка технической точности вычислений с учетом заданной

    result = summa(x, t)
    print(f"\nСумма знакопеременного ряда с точностью {t} знаков после запятой: {result:.{t}f}".rstrip('0').rstrip('.'))


except ValueError:
    print('\nВведите число.')
